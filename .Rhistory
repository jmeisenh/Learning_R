install.packages("dplyr", lib="C:/Program Files/R/R-4.1.1/library")
library(dplyr)
mydata <- read.csv('murders.csv')
mydata <- read.csv('murders.csv')
library(dplyr)
mydata <- read.csv('murders.csv')
setwd("C:/Users/jmeis/Learn_R")
mydata <- read.csv('murders.csv')
dim(mydata)
str(mydata)
mydata[c(1, 4, 6)]
names(mydata)
mysubdata <- select(mydata, state:population)
mysubdata
mysubdata <- select(mydata, state, population, murders, gunmurders)
mysubdata <- select(mydata, -abb)
mysubdata
mysubdata <- filter(mydata, murders>100)
mysubdata
mysubdatamurders <- select(mysubdata, state, murders)
mysubdatamurders
mysubdatamurders <- select(mysubdata, state, murders, population)
mysubdatamurders
mysubdata <- filter(mydata, murders>100 & population < 10000000)
mysubdata
mysubdata <- arrange(mydata, murders)
mysubdata
mysubdatamurders <- select(mysubdata, states, murders)
mysubdatamurders
head(mysubdata, murders)
head(mysubdatamurders, 5)
tail(mysubdatamurders, 5)
mysubdata <- arrange(mydata, desc(murders)
mysubdata <- arrange(mydata, desc(murders))
mysubdata
mysubdatamurders <- select(mysubdata, states, murders)
mysubdatamurders <- select(mysubdata, state, murders)
mysubdatamurders
head(mysubdatamurders, 5)
tail(mysubdatamurders, 5)
mydata <- rename(mydata, abbrivation=abb)
names(mydata)
mysubdata <- select(mydata, state, abbrivation, murders)
mysubdata
mysubdata <- mutate(mydata, ratio = murders/population)
names(mysubdata)
mysubdataratio < select(mysubdata, state, population, murders, ratio)
mysubdataratio <- select(mysubdata, state, population, murders, ratio)
mysubdataratio
mysubdata <- transmute(mydata, ratio = murders/population)
mysubdata
mysubdata <- group_by(mydata, region)
mysubdata
summarise(mysubdata, sum(murders))
summarise(mysubdata, mean(murders))
mysubdata <- arrange(mydata, murders)
mysubdatamurders <- select(mysubdata, state, murders)
mysubdatamurders
# can combine the previous two functions with the pipeline
arrange(mydata, murders) %>% select(state, murders)
arrange(mydata, murders) %>% select(state, murders) %>% head(3)
# returns the top 3
arrange(mydata, desc(murders)) %>% select(state, murders) %>% head(3)
library(dplyr)
mydata <- read.csv('murders.csv')
mysubdata <- select(mydata, state, population, murders)
barplot(mysubdata$population)
barplot(mysubdata$population,
xlab = 'states',
ylab = 'population',
main = 'States vs Population',
names.arg = mysubdata$state,
col = 'blue')
barplot(mysubdata$murders,
xlab = 'states',
ylab = 'murders',
main = 'States vs murders',
names.arg = mysubdata$state,
col = 'blue')
mysubdatasort <- arrange(mydata, desc(murders))
myhighdata <- head(mysubdata, 5)
barplot(myhighdata$murders,
xlab = 'states',
ylab = 'murders',
main = 'States vs murders',
names.arg = myhighdata$state,
col = 'blue')
mysubdatasort <- arrange(mydata, desc(murders))
myhighdata <- head(mysubdata, 5)
barplot(myhighdata$murders,
xlab = 'states',
ylab = 'murders',
main = 'States vs murders',
names.arg = myhighdata$state,
col = 'blue')
mydata <- read.csv('murdersmini.csv')
mydata
myseldata <- select(mydata, state, murders)
barplot(myseldata$murders)
barplot(myseldata$murders, horiz = T)
barplot(myseldata$murders, horiz = T,
xlab = 'Murders',
ylab = 'States',
main = 'States vs murders',
names.arg = myseldata$state,
col = 'blue')
myseldata <- mutate(mydata, popu=population/10000)
names(myselfdata)
names(myseldata)
myseldata <- myseldata[c(1, 3, 4)]
barplot(myselfdata$popu)
barplot(myselfdata$popu)
barplot(myseldata$popu)
mymatrix <- data.matrix(myseldata)
mymatrix
mymatrixtrans <- t(mymatrix)
mymatrixtrans
barplot(mymatrixtrans)
barplot(mymatrixtrans,
barplot(mymatrixtrans,
barplot(mymatrixtrans,
xlab = 'States',
ylab = 'Murders / Population',
main = 'Population vs murders',
col = c('blue', 'red'))
barplot(mymatrixtrans,
xlab = 'States',
ylab = 'Murders / Population',
main = 'Population vs murders',
col = c('blue', 'red'))
barplot(mymatrixtrans,
xlab = 'States',
main = 'Population vs murders',
col = c('blue', 'red'))
barplot(mymatrixtrans,
xlab = 'States',
main = 'Population vs murders',
col = c('blue', 'red'),
names.arg = myseldata$states,
legend('topleft', c('Population', 'Murders'), fill = c('clue', 'red')))
barplot(mymatrixtrans,
xlab = 'States',
main = 'Population vs murders',
col = c('blue', 'red'),
names.arg = myseldata$states,
legend('topleft', c('Population', 'Murders'), fill = c('blue', 'red')))
barplot(mymatrixtrans,
xlab = 'States',
main = 'Population vs murders',
col = c('blue', 'red'),
names.arg = myseldata$state,
legend('topleft', c('Population', 'Murders'), fill = c('blue', 'red')))
barplot(mymatrixtrans,
xlab = 'States',
main = 'Population vs murders',
col = c('blue', 'red'),
names.arg = myseldata$state)
legend('topleft', c('Population', 'Murders'), fill = c('blue', 'red'))
mydata <- read.csv('GEStock.csv')
names(mydata)
mysubdata <- select(mydata, Date, Price)
hist(mysubdata$Price)
hist(mysubdata$Price,
xlab='Stock Price',
main= 'Stocks Data',
col = 'blue',
border = 'red')
hist(mysubdata$Price,
xlab='Stock Price',
main= 'Stocks Data',
col = 'blue',
border = 'red',
breaks = 20)
mydata <- read.csv('murders.csv')
mysubdata <- select(mydata, state, population, murders)
plot(mysubdata$population, mysubdata$murders)
plot(mysubdata$population, mysubdata$murders,
xlab = 'Population',
ylab = 'Murders',
main = 'population vs Murders',
col = 'red')
plot(mysubdata$population, mysubdata$murders,
xlab = 'Population',
ylab = 'Murders',
main = 'population vs Murders',
col = 'red',
pch = 20)
plot(mysubdata$murders, type='l')
mysubdata <- select(mydata, state, population, murders, region)
boxplot(mysubdata$murders ~ mysubdata$region)
boxplot(mysubdata$murders ~ mysubdata$region,
xlab = 'region',
ylab = 'murders',
main = 'Regions V murders',
col = 'red',
border = 'blue')
boxplot(mysubdata$murders ~ mysubdata$region,
xlab = 'region',
ylab = 'murders',
main = 'Regions V murders',
col = 'red',
border = 'blue',
notch = T)
mydata <- read.csv('murdermini.csv')
mydata <- read.csv('murdersmini.csv')
myseldata <- mutate(mydata, popu=population/10000)
myseldata <- myseldata[c(1, 3, 4)]
names(myseldata)
myseldata <- myseldata[c(1, 3, 4)]
barplot(myseldata$popu, xlab = 'States', ylab = 'Population', main = 'State V Population', col = 'blue', names.arg = myseldata$state)
barplot(myseldata$murders, xlab= 'States', ylab = 'Murders', col = 'blue',
main = 'State vs Murders', names.arg = myseldata$state)
par(mfrow=c(1,2))
barplot(myseldata$popu, xlab = 'States', ylab = 'Population', main = 'State V Population', col = 'blue', names.arg = myseldata$state)
barplot(myseldata$murders, xlab= 'States', ylab = 'Murders', col = 'blue',
main = 'State vs Murders', names.arg = myseldata$state)
plot(myseldata$popu, myseldata$murders,
xlab = 'Population', ylab = 'Murders',
main = 'Population Vs. Murders',
col = 'red', pch = 20)
par(mfrow=c(2,2))
barplot(myseldata$popu, xlab = 'States', ylab = 'Population', main = 'State V Population', col = 'blue', names.arg = myseldata$state)
barplot(myseldata$murders, xlab= 'States', ylab = 'Murders', col = 'blue',
main = 'State vs Murders', names.arg = myseldata$state)
plot(myseldata$popu, myseldata$murders,
xlab = 'Population', ylab = 'Murders',
main = 'Population Vs. Murders',
col = 'red', pch = 20)
